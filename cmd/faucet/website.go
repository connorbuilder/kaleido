// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xe1\x92\xdb\x36\x92\xfe\x3d\x5b\xb5\xef\xd0\xe1\xd9\x2b\xe9\x3c\x24\x35\x33\xb6\x77\x4e\x23\x2a\xe5\xf5\x66\xf7\x7c\xc9\x25\xa9\xc4\xa9\xbb\xad\x6c\xea\x0a\x24\x5b\x22\x3c\x20\xc0\x00\xa0\x34\xca\x94\xde\xfd\xaa\x01\x92\x22\x25\xcd\xd8\x8e\x7d\x55\xe7\x1f\x1e\x12\x68\x74\x37\xba\xbf\x46\x37\x5a\x9c\x7f\xf1\xd7\xef\x5e\xbf\xfd\xc7\xf7\x5f\x41\x61\x4b\xb1\xf8\xe3\x1f\xe6\xf4\x17\x04\x93\xab\x24\x40\x19\x2c\xfe\xf8\x87\xb3\x79\x81\x2c\xa7\x87\xb3\x79\x89\x96\x41\x56\x30\x6d\xd0\x26\x41\x6d\x97\xe1\x75\xd0\x9b\x29\xac\xad\x42\xfc\xb5\xe6\xeb\x24\xf8\xef\xf0\xa7\x57\xe1\x6b\x55\x56\xcc\xf2\x54\x60\x00\x99\x92\x16\xa5\x4d\x82\x37\x5f\x25\x98\xaf\xb0\xbf\x50\xb2\x12\x93\x60\xcd\x71\x53\x29\x6d\x7b\xb4\x1b\x9e\xdb\x22\xc9\x71\xcd\x33\x0c\xdd\xcb\x39\x70\xc9\x2d\x67\x22\x34\x19\x13\x98\x5c\x10\x1f\xc7\xc9\x72\x2b\x70\x71\x7f\x1f\x7d\x8b\x76\xa3\xf4\xed\x6e\x37\x83\x57\xb5\x2d\x50\x5a\x9e\x31\x8b\x39\xfc\x8d\xd5\x19\xda\x79\xec\x29\x9b\x65\x82\xcb\x5b\x28\x34\x2e\x93\x80\xf4\x37\xb3\x38\xce\x72\xf9\xce\x44\x99\x50\x75\xbe\x14\x4c\x63\x94\xa9\x32\x66\xef\xd8\x5d\x2c\x78\x6a\x62\xbb\xe1\xd6\xa2\x0e\x53\xa5\xac\xb1\x9a\x55\xf1\x55\x74\x15\xfd\x39\xce\x8c\x89\xbb\xb1\xa8\xe4\x32\xca\x8c\x09\x40\xa3\x48\x02\x63\xb7\x02\x4d\x81\x68\x03\x88\x17\xbf\x53\xf0\x52\x49\x1b\xb2\x0d\x1a\x55\x62\xfc\x3c\xfa\x73\x34\x75\x32\xfb\xc3\xef\x11\xeb\x04\x9b\x4c\xf3\xca\x82\xd1\xd9\x07\x4b\x7e\xf7\x6b\x8d\x7a\x1b\x5f\x45\x17\xd1\x45\xf3\xe2\x24\xbd\x33\xc1\x62\x1e\x7b\x86\x8b\x4f\x63\x1e\x4a\x65\xb7\xf1\x65\xf4\x3c\xba\x88\x2b\x96\xdd\xb2\x15\xe6\xad\x28\x9a\x8a\xda\xc1\xcf\x27\xf8\x21\x47\xbe\x3b\xf4\xe3\x67\x91\x56\xaa\x12\xa5\x8d\xde\x99\xf8\x32\xba\xb8\x8e\xa6\xed\xc0\x09\x01\x5e\x04\xf9\xce\x49\x3b\x8b\xd6\xa8\x09\xc4\x22\xcc\x50\x5a\xd4\x70\xef\x86\xcf\x4a\x2e\xc3\x02\xf9\xaa\xb0\x33\xb8\x98\x4e\x9f\xde\x9c\x1c\x5e\x17\xcd\x78\xce\x4d\x25\xd8\x76\x06\x4b\x81\x77\xcd\x18\x13\x7c\x25\x43\x6e\xb1\x34\x33\xf0\xdc\xfd\xcc\xce\x4b\xae\xb4\x5a\x69\x34\xa6\x15\x59\x29\xc3\x2d\x57\x72\x46\x00\x63\x96\xaf\xf1\x34\xb9\xa9\x98\x3c\x5e\xc3\x52\xa3\x44\x6d\xf1\x50\xa1\x54\xa8\xec\xb6\x19\x74\x61\x3e\xd8\x4f\xa6\x84\xd2\x33\xd8\x14\xbc\x5d\x09\x5e\x1c\x54\x1a\x5b\x21\x50\xb1\x3c\xe7\x72\x35\x83\x97\x55\xbb\x39\x28\x99\x5e\x71\x39\x83\x69\x7f\xd9\x3c\xee\x4c\x3b\x8f\x9b\xc3\x8d\x9e\x53\x95\x6f\xbd\x77\x73\xbe\x86\x4c\x30\x63\x92\xe0\xc0\xf2\xfe\xd4\x1a\x50\xd0\x61\xc5\xb8\xec\xe6\x06\x93\x5a\x6d\x02\x70\xe2\x92\xc0\x2b\x13\xa6\xca\x5a\x55\xce\xe0\x82\xf4\x6c\xd7\x1c\x70\x14\xa1\x58\x85\x17\x97\xdd\xec\xd9\xbc\xb8\x68\xd9\x58\xbc\xb3\xa1\x73\x5b\xe7\xb0\x60\x31\xe7\xed\xe2\x25\x83\x25\x0b\x53\x66\x8b\x00\x98\xe6\x2c\x2c\x78\x9e\xa3\x4c\x02\xab\x6b\x24\x94\xf1\x05\xf4\x0f\xc9\x07\xce\xc8\xe2\xa2\xd3\x2c\xce\xf9\xba\xdd\x5a\xff\xf9\x60\x9b\x8f\xec\xe4\x1a\x9a\x07\xb5\x5c\x1a\xb4\x61\x7f\x63\x3d\x6a\x2e\xab\xda\x86\x2b\xad\xea\x6a\x4f\x70\x36\x77\xc3\xc0\xf3\x24\xa8\xb5\x08\x9a\x64\xe1\x1e\xed\xb6\x6a\x0c\x12\x74\xdb\x57\xba\x0c\xc9\x25\x5a\x89\x00\x2a\xc1\x32\x2c\x94\xc8\x51\x27\xc1\x8f\x2a\xe3\x4c\x80\xf4\x3b\x87\x9f\x7e\xf8\x06\x1a\xdf\x71\xb9\x82\xad\xaa\x35\x7c\xcd\x04\xf2\x5c\x01\xcb\x73\x42\x71\x14\x45\x7d\x45\x1c\xa6\x8f\x75\x0d\x53\x2b\x7b\x64\x67\xf3\xb4\xb6\x56\x75\x94\xa9\x95\x90\x5a\x19\xe6\xb8\x64\xb5\xb0\x90\x6b\x55\xe5\x6a\x23\x43\xab\x56\x2b\xca\x8c\x7e\x17\x7e\x51\x00\x39\xb3\xac\x99\x4a\x82\x96\xb6\x75\x25\x33\x95\xaa\xea\xaa\x71\xa6\x1f\xc4\xbb\x8a\xc9\x1c\x73\x72\xbd\x30\x18\x2c\xfe\xce\xd7\x08\x25\xc2\xd7\xaf\xbe\x39\x3b\xc4\x45\xc6\x34\xda\xb0\xcf\xf2\x08\x1d\xf3\xd8\xab\xd2\xec\x08\x9a\x7f\xf3\x5a\xb4\xac\xba\x1d\x94\x28\x6b\x18\xbc\x85\x9a\x8e\x9d\x60\x71\x7f\xaf\x99\x5c\x21\x3c\xe1\xf9\xdd\x39\x3c\x61\xa5\xaa\xa5\x85\x59\x02\xd1\x2b\xf7\x68\x76\xbb\x21\x7b\x80\xb9\xe0\x8b\x39\x7b\x0c\xe5\xa0\x64\x26\x78\x76\x9b\x04\x96\xa3\x4e\xee\xef\x89\xfb\x6e\x77\x03\xf7\xf7\x7c\x09\x4f\xa2\x1f\x30\x63\x95\xcd\x0a\xb6\xdb\xad\x74\xfb\x1c\xe1\x1d\x66\xb5\xc5\xf1\xe4\xfe\x1e\x85\xc1\xdd\xce\xd4\x69\xc9\xed\xb8\x5d\x4e\xe3\x32\xdf\xed\x48\xe9\x46\xd1\xdd\x0e\x62\x62\x2a\x73\xbc\x83\x27\xd1\xf7\xa8\xb9\xca\x0d\x78\xfa\x79\xcc\x16\xf3\x58\xf0\x45\xb3\xee\xc0\x4c\x71\x2d\x7a\x90\x89\x09\x33\x7b\xb0\xbb\xf0\x71\xda\xf6\x95\x3d\x15\x0b\xab\xb0\xdb\x41\x83\x09\xc3\x2d\xde\xe2\x36\x09\xee\xef\xfb\x8b\x9b\xd9\x8c\x09\x91\x32\xb2\x8d\xdf\x5e\xb7\xe8\x37\x24\xb0\xae\xb9\x71\x65\xd8\xa2\x55\xa1\xa7\xfa\x07\x47\xf8\xc1\x41\x66\x55\x35\x83\xab\xcb\xfe\x29\x76\x2a\xf8\x5f\x1e\x04\xff\xd5\x69\xea\x8a\x49\x14\xe0\xfe\x0f\x4d\xc9\x44\xfb\xdc\x84\x4d\x3f\x0e\x0f\x57\x85\x74\x72\x77\xda\x75\x79\x60\x7a\x03\x6a\x8d\x7a\x29\xd4\x66\x06\xac\xb6\xea\x06\x4a\x76\xd7\x65\xc6\xab\xe9\x74\xa0\x3a\x95\x90\x2c\x15\xe8\x4e\x1a\x8d\xbf\xd6\x68\xac\xe9\xce\x15\x3f\xe5\xfe\xa7\xe3\x25\x47\x69\x30\x3f\xb0\x08\x89\x24\x0b\x3b\xaa\x3e\x08\xf6\x26\x3d\xa9\xfe\x52\xa9\x7d\x6a\xe9\x6b\xd2\x70\xef\x65\xc4\x60\x31\xb7\xba\x47\x78\x36\xb7\xf9\x47\x25\x06\x4d\xb5\xe1\x43\x79\xc1\x9f\x70\xb4\xff\x0a\x51\xfb\x9a\x84\xf0\x0b\xee\x75\x1e\xdb\xfc\x53\x44\x13\x20\x53\x66\xf0\x43\xe4\xbb\x82\x60\x2f\xdf\xbd\x7e\xb2\x02\x05\x32\x6d\x53\x64\xf6\x43\x34\x58\xd6\x32\xef\x59\xe0\xeb\x57\xdf\x7c\xb2\xfc\x5a\xf2\x35\x6a\xc3\xed\xf6\x43\x15\xc0\x7c\xaf\x81\x7f\x3f\xd0\x61\x1e\x5b\xfd\x3e\xc4\x0d\xde\x3e\x5f\xac\xbf\xb7\x62\xb9\x5a\xfc\xbb\xda\x40\xae\xd0\x80\x2d\xb8\x01\xca\xba\x5f\xce\xe3\xe2\x6a\x4f\x53\x2d\xde\xd2\xcc\xd7\xaf\xbe\x81\xa5\x2b\x3c\x80\x1b\xd0\xb5\x74\x19\x59\x49\xb0\x05\x0e\x8b\x95\x26\x79\x47\xf0\x56\x51\xf1\xb7\x46\x69\xa1\x64\x82\x67\x5c\xd5\x06\x58\x66\x95\x36\xb0\xd4\xaa\x04\xbc\x2b\x58\x6d\x2c\x31\xa2\xc3\x84\xad\x19\x17\x2e\xa8\x9c\x63\x41\x69\x60\x59\x56\x97\x35\x15\xb1\x72\x05\x28\x55\xbd\x2a\xa8\x00\x00\xab\xc0\xa7\x2b\xa1\xe4\xaa\xd3\xc6\x54\xac\x04\x66\x2d\xcb\x6e\xcd\x39\xb4\xe7\x03\x30\x8d\x60\x39\xe6\xb4\x2a\x53\x65\xa9\x24\x5c\xe9\x1c\x2a\xa6\xed\x16\xcc\xb0\xe2\x60\x59\xe6\x72\x5f\x04\xaf\xe4\x56\x49\x84\x82\xad\x9d\x7e\xf0\xd6\xdf\x44\xce\x49\xad\xbf\xb1\x0c\x53\xa5\x3a\x72\x28\xd9\xb6\x95\xd7\x28\xbf\xe1\xb6\xe0\xde\x3a\x15\xea\x92\xd6\xe6\x20\x78\xc9\xad\x89\xe6\x71\xd5\x3b\x5f\xf7\x39\x5b\x84\x85\xd2\xfc\x37\x2a\x78\xc4\xe0\x30\xb5\x07\xc7\x4c\x7b\x52\x3a\xbf\x0b\x5c\xda\x19\x3c\xf7\x27\xe5\x21\x9e\x9b\xfb\xd3\x29\x30\xb7\x3c\xdd\xdd\x94\x92\xd0\x0c\xae\x7c\xbd\xeb\x4b\x8c\xdc\xf6\x55\xc8\x0f\xd0\xe6\xa5\x5e\x5f\x57\x77\x9d\x22\x5d\xd5\x3c\xed\xb8\x10\x06\x86\x76\x59\xf3\x9e\x29\x4b\x76\x8b\xc0\x60\xce\x0e\x2e\xd9\x8d\xd6\xee\x76\xc6\x5d\x9f\x21\xb6\x1b\x44\xfb\x25\xc5\x70\xf2\x83\x67\xc8\xe5\xea\xe9\xe5\xd4\x63\x92\x1e\x88\xfd\xd3\xcb\x29\x97\x56\x3d\xbd\x9c\x4e\xef\xa6\x1f\xf8\xef\xe9\xe5\x54\xc9\xa7\x97\x53\x5b\xe0\xd3\xcb\xe9\xd3\xcb\xab\x3e\x9a\xfd\x48\x53\x73\x12\x11\x1a\x12\xd6\x62\x3c\x00\xcb\xf4\x0a\x6d\x12\xfc\x0f\x4b\x55\x6d\x67\xa9\x60\xf2\x36\x58\x38\x6d\xa9\x0a\x71\x38\x38\x59\xb8\x42\xc5\x0c\x61\x82\xf4\x75\x30\x69\x3a\x2a\x06\xc6\xa6\xd6\x5a\xd5\x92\x52\x24\xd0\x8e\x5d\x80\xca\x11\xc1\x8c\xcc\x32\x89\xe6\xa9\x8e\x17\xaf\x55\xb5\x0d\x1d\x13\xb7\xfc\xc8\x88\xa6\xae\x2a\xa5\x6d\xd4\x37\x26\xa3\x9b\x92\x40\x13\x5f\x4f\x5f\x5c\xbf\x7c\x54\x7b\x43\xd5\xb7\xdb\x42\xa7\x21\x4b\xd5\x1a\xc1\xd7\xfa\xa9\xba\x03\x26\x73\x58\x72\x8d\xc0\x36\x6c\xfb\xc5\x3c\xce\x9b\x6b\xda\xa7\xc3\x76\xd9\x04\xd8\xff\x2f\xdc\xb6\x61\x7f\x0e\x55\x9d\x0a\x6e\x0a\x60\x20\x71\x03\x73\x63\xb5\x92\xab\x85\x1b\xcd\xe8\xee\xea\x5e\xa1\x52\xc6\x3e\x02\x00\x2c\x53\xcc\xf3\x13\x10\xf8\x5c\x08\xd8\x6c\x36\x51\x6b\x49\xe7\xfe\x02\x45\x15\xd3\x11\x58\x4b\x6e\xb7\xb1\x0f\x23\x25\xe3\x2f\x79\x9e\x5c\x5e\x5f\xbe\x7c\x79\xf9\xfc\xdf\xae\x5f\xbc\xb8\xbc\x7e\xfe\xe2\x21\x6c\xd0\x9e\x3e\x19\x1a\xbe\xbc\xfe\x56\xd1\xbd\x76\x5f\x5b\x7b\xc8\xb4\xc5\x1c\x65\xeb\x9c\x2e\x28\x3a\xf8\xdd\x30\xaa\x25\x15\x25\x21\x13\x27\xcb\x89\x8f\x01\x92\x43\xd2\x23\xaa\x7d\x22\xba\x5a\x04\x11\x58\x54\x6d\x69\x8b\xed\x85\x9f\x2b\xd9\x21\xea\x1c\x0c\x2f\x2b\xb1\x85\x6c\xef\xf9\x93\xd0\x7a\xd0\x2f\xef\x45\xd6\xd0\x73\x1e\x67\xae\x00\x28\x55\x8e\x94\xfa\x4d\x6d\x32\xac\x5c\xc7\x98\x12\xea\x5f\xb6\xbf\x31\x69\xb9\xc4\x36\xf1\x46\xf0\x9d\x14\x5b\xa8\x0d\xc2\x52\x69\xc8\x31\xad\x57\x2b\x57\x2b\x68\xa8\x34\x5f\x33\x8b\x6d\xb6\x35\x2d\x30\x3a\x58\xf4\xaf\x3c\x54\xfb\x88\x7e\x1d\xf2\x0f\x55\x43\xc6\x24\x58\xcd\xb2\x5b\x1f\x2f\xb5\xd6\x14\x2f\x15\xfa\x0d\x75\x29\x3f\x45\xa1\x36\x8e\xc4\x6f\x7d\xc9\x51\xb8\xfc\x6f\x10\xa1\x50\x1b\x28\xeb\xcc\x45\x25\xe5\x77\xb7\x8f\x0d\xe3\x16\x6a\x69\xb9\xf0\x16\xb5\xb5\x96\x54\x2d\xe0\x30\x5d\x1f\x5d\x0c\xe7\x58\x2e\xde\x16\x78\xa2\x36\xea\x6e\x74\xa0\xf1\xb5\x27\x87\x4a\x2b\x8b\x19\xf9\x14\xd8\x8a\x71\x69\xc8\x2b\xae\x22\xc0\xf2\xc3\x6e\x7c\xfb\xc7\xf6\xa9\xd7\xec\xf4\x24\x71\x0c\x7f\x17\x2a\x65\x02\xd6\x04\xfa\x54\x50\x75\xa7\xa0\x50\x64\x82\x9e\xd5\x8c\x65\xb6\x36\xa0\x96\x6e\xd4\x6f\xc0\x31\x58\x33\x4d\xde\xc4\xb2\xb2\x90\xb4\x8d\x39\x1a\x34\xa8\xd7\x6d\xf3\x91\xde\xe9\x8e\x3f\xa4\xe8\x3c\x90\xc0\xcf\xbf\xdc\x34\x21\x1f\xc7\xf0\x57\x5c\x3a\x8c\x10\xde\xfd\xfe\x6d\xc1\x2c\x64\x1a\x99\x45\x03\x99\x50\xa6\xd6\x5e\xcf\x5c\xab\x0a\x48\xd7\x96\x57\xc7\x9c\x66\x2a\x27\xb1\xe5\x32\x2e\x98\x29\x26\x6d\x7f\x51\xa3\xf3\x5a\x37\xd9\x4d\x9c\x11\x12\xc7\xc4\x82\x27\xd3\x1b\xe0\xf3\x96\x75\x24\x50\xae\x6c\x71\x03\xfc\xd9\xb3\x3d\xf5\x19\x5f\xc2\xb8\x25\xf9\x99\xff\x12\xd9\xbb\x88\x04\x41\x92\xc0\x40\xa0\x93\xd9\x70\x32\x95\xe0\x19\x8e\xf9\x39\x5c\x4c\x6e\xba\xe9\x54\x23\xbb\xed\x5e\x5b\xdf\x36\x7f\xfd\x9f\xdd\xcd\x81\x91\x9c\x37\x06\x66\xf2\xfd\x02\x03\x0c\x56\xdc\x58\xa8\xb5\xab\x80\x89\xce\x7b\x64\xef\x20\x47\xd8\x37\xd0\x11\x60\x9b\x87\x06\x6c\xdd\x56\x3c\xa3\xc8\xa0\xcc\xc7\xff\xf1\xe3\x77\xdf\x46\xc6\x6a\x2e\x57\x7c\xb9\x1d\xdf\xd7\x5a\xcc\xe0\xc9\x38\xf8\x97\x5a\x8b\x60\xf2\xf3\xf4\x97\x68\xcd\x44\x8d\xe7\xce\xff\x33\xf7\xff\x91\x98\x73\x68\x1e\x67\x30\x94\xb8\x9b\x4c\x6e\x1e\x68\xaf\xf4\x3a\x42\x1a\x0d\xda\x31\x51\xee\x63\xe2\xc8\x50\x0c\x4a\xb4\x85\x72\x81\xad\x31\x53\x52\x62\x66\xa1\xae\x94\x6c\xec\x02\x42\x19\xd3\xc3\x66\x4b\x92\x9c\xc0\x48\xb3\x22\x71\x19\xfd\xbf\x30\xfd\x51\x65\xb7\x68\xc7\xe3\xf1\x86\xcb\x5c\x6d\x22\xa1\xfc\x61\x1c\x51\x0c\xab\x4c\x09\x48\x92\x04\x9a\x5c\x1b\x4c\xe0\x4b\x08\x36\x86\xb2\x6e\x00\x33\x7a\xa4\xa7\x09\x3c\x83\xc3\xe5\x05\x15\x05\xcf\x20\x88\x59\xc5\x83\x49\x1b\x22\xad\xfd\x95\x2c\xd1\x18\xb6\xc2\xbe\x8e\xee\x0e\xb5\x07\x1d\xed\xa5\x34\x2b\x48\xc0\x39\xaa\x62\xda\xa0\xa7\x89\xe8\xfe\xde\xa1\x8f\x50\xec\xe8\x92\x04\x64\x2d\x44\x0f\xb6\x3e\x52\x6e\xf6\x70\x1c\x2e\x89\x7c\x56\xfa\x22\x49\x80\x6e\xb4\x64\xec\xbc\xb7\x9a\xa0\xe0\xef\xde\x93\x88\x72\xc8\x7e\xc9\xe4\x66\x88\xf0\x01\x43\xcc\xdf\xcb\x11\xf3\x43\x96\x98\x3f\xc8\xd3\x75\x3c\x1e\x65\xe9\x5b\x24\x3d\x8e\x6e\xe0\x41\x86\xb2\x2e\x53\xd4\x8f\x72\xf4\x4d\x8f\x86\xa3\xb3\xfc\x1b\x69\x7b\x8b\xcf\xe1\xe2\xe5\xe4\x41\x01\xa8\xb5\x7a\x98\xbf\x54\x76\x3b\xbe\x17\x6c\x4b\xe5\x16\x8c\xac\xaa\x5e\xbb\x36\xc5\xe8\xdc\x65\xea\x19\x74\x2c\xce\x5d\x43\x7a\x06\x23\xf7\x46\xf3\xbc\x44\xb7\xea\xc5\x74\x3a\x3d\x87\xf6\x27\x9e\xbf\x30\x0a\x4f\x5d\xe3\xee\x41\x95\x4c\x9d\x65\x54\x31\x7c\x92\x52\x0d\x93\x4e\xad\xe6\xfd\x93\x14\xeb\x32\xc9\x40\x33\xf8\xd3\x9f\xe0\x68\xf6\x00\xdc\x71\x0c\xff\xc9\xe8\x2e\x2f\x84\x6b\x40\xb8\xbe\x43\xb7\xa0\xe4\xc6\xb8\x1b\xbd\x81\x5c\x49\x6c\x17\x7d\x64\x86\x38\x52\xb3\xa1\x83\x05\x4c\x0f\x75\xa4\x03\xb3\x97\x41\x4e\x24\x96\x3e\xe3\x83\x94\x71\xb6\x1b\x88\x1c\x2c\xe6\x25\xc2\x17\x09\x04\xc1\x60\xfd\x11\x09\x51\xec\xf9\x9d\x19\xb4\x6f\xbd\x57\xc6\x4d\x42\x3d\x95\xeb\x26\xe7\x70\x35\x9d\x4e\x27\x27\x14\xd9\xf5\x0c\xfd\xaa\xa2\xda\x0b\x98\xdc\xba\x73\xb3\xb3\xb2\x2b\x40\xa9\x8e\xa2\x73\x4f\x40\xa6\x84\xf0\x75\x4f\xbb\x96\x4c\xdd\x34\x63\x12\x08\x2f\x6e\x4e\xa5\xde\x9e\x4d\xfb\x3b\x3c\x74\xd5\x09\x37\x1c\xb9\x6b\x68\xbc\x03\xea\xf0\x62\xe0\xa0\x81\xef\x1e\x70\xd2\x59\xa7\x3b\xef\x99\xf6\xd0\x77\x3d\xe7\x1d\x5b\xaf\xb7\x0d\xcf\xec\xd9\xc5\x87\xee\xa6\x9b\xaf\x6a\x53\x8c\x0f\xf4\x9d\x1c\x95\x1b\xe4\xa8\x37\x16\x35\x95\xde\x8a\x92\x1c\x39\x86\xae\x17\x1a\x8f\xfc\xe3\xea\x7f\x8d\xa1\x46\x99\xa3\x6e\x6b\x11\x7f\x5d\xa0\x52\x72\xe8\x3f\x7f\x5d\x1d\x00\xec\x63\x03\xc9\x15\x76\x4a\x22\x00\xc0\x41\x70\x38\xf0\x0e\xd1\x4b\xd4\x28\x58\x65\x30\x87\x04\xfc\xcf\xf3\xe3\x49\x54\x4b\x7e\x37\x9e\x84\xcd\xfb\x21\x93\x76\xfe\xa6\x77\x05\x6d\x75\x7f\x96\x40\x30\xb7\x1a\x78\x9e\x8c\x02\x78\x76\x2a\x3a\x29\x5b\x8f\x16\x3d\x25\xfa\x6b\x01\xe6\x36\x5f\xb8\x46\xab\xbf\x0a\xfe\x33\x48\x59\x76\xbb\x72\x97\xac\x19\x95\x6a\xe3\x23\xbe\x6c\xcd\x2c\xd3\x8e\xed\xe4\x06\xf6\xe4\xcd\x25\x34\x23\x1f\xdd\x80\xbf\xed\xba\x86\x2e\x74\x3f\x88\xb8\xb7\x54\xe9\x1c\x75\xa8\x59\xce\x6b\x33\x83\xe7\xd5\xdd\xcd\x3f\xdb\x9f\x8d\x5c\xf3\xf9\x71\x5d\x2b\x8d\x8b\x23\x95\x9a\x46\xe6\x33\x08\xe6\x31\x11\xbc\x97\x4f\xb7\xdd\xfe\xc7\x00\x70\xa2\xc9\x0e\xdd\xef\xf3\xcd\x78\xc9\xf3\x5c\x20\xa9\xdc\xe3\x4f\xf1\x49\x30\x18\x44\xd9\x50\x28\x34\xfd\xf5\xde\xaa\x1d\xa0\x30\xf8\xd8\x92\xae\x59\x3f\x22\x24\x84\xb4\x6f\xee\x2c\xdf\xdc\xe6\xdd\xb0\x1e\x39\x83\x34\x5f\x7b\xe4\xb5\x76\xa5\xda\x38\x6c\x90\x76\x0e\x23\x43\xb5\x63\x6e\x46\x93\xa8\xa8\x4b\x26\xf9\x6f\x38\xa6\xf4\x35\xf1\x06\x73\xdd\xff\xe0\xd4\x99\x7d\xa4\xce\xbe\x23\x3f\x6a\x93\xe1\xa8\x31\xe5\xa8\xf5\xf2\xf3\x7d\xfb\x60\x06\xd3\x9b\xd1\x47\xdb\xe9\xb4\x9c\x30\x65\x1a\xfa\x2f\x61\x9b\xa7\x41\x2b\x92\xdf\xce\xa5\x4c\x8f\x7c\xbf\xc4\xd5\xf9\x52\x6d\x92\xd1\xd5\xb4\x53\xd3\x3b\xdc\xf9\x7b\xd4\xa0\xee\xd8\x25\xa4\x67\x1b\xa8\x0b\xb8\x9a\x7e\x16\x7d\x7d\xd3\xe5\x60\x0f\x56\xf3\x0a\x73\x60\x99\xe5\x6b\xfc\xbf\xd8\xca\xe7\x30\xf4\x47\x2b\x49\x78\x6c\xed\xe7\xe0\x3a\xd0\x98\x66\x3b\xf3\xfe\x2b\xc5\x1e\xc4\xce\xc8\xcf\x20\x38\xbd\x95\x87\x11\x79\x48\x7a\x10\xe9\x8f\x9c\x03\xee\x97\xad\xe0\x38\xdd\x50\xa1\xdc\xfd\x3a\x3b\x89\x0a\x5b\x8a\x71\x30\xb7\xee\xe3\x1d\xd2\xbc\xe3\xe1\x58\xf8\xe1\xc3\x3a\x70\x77\x70\x2d\xca\x84\x32\x78\x70\x71\x83\x5e\x29\xd3\x5d\xee\xda\xba\x05\x76\xfd\xaf\x9e\xe2\x18\x7e\xb4\x4c\x5b\x60\xf0\xd3\x1b\xa8\xab\x9c\x59\xca\x6e\x0a\x28\x83\xfa\x5f\x69\xda\xcf\xa2\x52\xa6\x0d\x2c\x95\xde\x30\x9d\x37\x1d\x21\x5b\xe0\xd6\xfd\x8c\xd4\x55\x8c\x06\xed\x1b\x3a\xdd\xd6\x4c\x8c\x8f\xef\x92\x4f\xc6\xa3\xa8\xef\xff\xd1\x24\x42\x96\x15\x27\x28\x5d\x42\xeb\x44\x27\xf0\xad\xbb\x45\x8c\x9f\x8c\x6d\xc1\xcd\x24\x62\xd6\xea\xf1\x68\x00\x8d\xd1\x84\xbc\x7c\xd1\xbf\xe4\x75\xeb\xe7\xc3\x40\x7b\x8c\xcb\xbe\x16\xdf\xd7\x0b\x2d\x7d\x66\xcc\xd8\x03\x6d\x74\xde\xe3\x3e\xc4\xd9\xe8\xe9\x68\xef\xb3\x7d\xcc\xef\xf7\x92\x9c\x56\x66\xc0\x7c\x44\xa1\x37\x3a\xd6\x80\xe5\xf9\x6b\x8a\xa9\x71\x70\x22\xfe\x8f\xb1\x32\xd9\x9b\xdd\x1f\xe7\x8f\xdb\xdb\x7f\x34\xf2\x80\xb1\x79\x3e\x9a\x44\xa6\x4e\x7d\xff\x63\xfc\x62\x7f\x9b\x6b\xe9\x1c\x9e\x0f\x73\xc5\x51\xe9\x41\x32\x86\xe5\x47\x78\x50\xae\x3c\x92\x56\x5a\x99\xcd\xce\x76\xe7\x64\xfa\xe9\xa4\xd7\x50\xfb\xca\x50\x39\xe6\x7f\x83\xd8\x60\x6a\x5c\xb7\x02\x9a\x18\x70\x8d\x23\xdf\x20\x7a\xf5\xfd\x9b\x7e\x93\xa8\x0b\x93\xb1\x17\xd1\x7d\xd1\x78\xb2\x25\x73\xf2\x1b\xca\xcd\x66\x13\xad\x94\x5a\x09\xff\xf5\x64\xd7\xb3\x89\x59\xc5\xa3\x77\x26\x00\x66\xb6\x32\x83\x1c\x97\xa8\x17\x3d\xfe\x6d\x23\x67\x1e\x37\x5f\xf1\xcd\xe3\xe6\x8b\xe6\xff\x0d\x00\x00\xff\xff\xa0\x1d\x2c\x1c\xe3\x2c\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
